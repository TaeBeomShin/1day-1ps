#include<bits/stdc++.h>

using namespace std;

//총 경우의수 블록1:2가지, 블록2:1가지, 블록 3: 8가지, 블록4:4가지, 블록5:4가지 

int tetromino[19][3][2]={//기준점인 0,0은 제외하고. 
	// 긴 막대기
	{{0,1},{0,2},{0,3}},
	{{1,0},{2,0},{3,0}},
	// 정사각형 
	{{1,0},{0,1},{1,1}},
	//ㄴ자 경우의 수 8개 
	{{1,0},{2,0},{2,1}},
	{{1,0},{2,0},{2,-1}},
	{{0,1},{0,2},{1,0}},
	{ { 1,0 },{ 1,1 },{ 1,2 } },//오른쪽으로 긴 ㄴ
    { { 0,1 },{ 1,1 },{ 2,1 } },//밑으로 긴 ┐
    { { 0,1 },{ 1,0 },{ 2,0 } },//밑으로 긴 ┌
    { { 0,1 },{ 0,2 },{ 1,2 } },//왼쪽으로 긴 ┐
    { { 0,1 },{ 0,2 },{ -1,2 } },//왼쪽으로 긴 ┘
    //번개 모양 경우의 수 4개
    { { 1,0 },{ 1,1 },{ 2,1 } },
    { { 1,0 },{ 1,-1 },{ 2,-1 } },
    { { 0,1 },{ -1,1 },{ -1,2 } },
    { { 0,1 },{ 1,1 },{ 1,2 } },
    //ㅗ 모양 경우의 수 4개
    { { 0,1 },{ -1,1 },{ 0,2 } },//ㅗ
    { { 0,1 },{ 1,1 },{ 0,2 } },//ㅜ
    { { -1,0 },{ 1,0 },{ 0,1 } },//ㅏ
    { { 0,1 },{ -1,1 },{ 1,1 } }//ㅓ
};

int n,m;
int arr[501][501];
int main(){
	cin>>n>>m;
	int max=0;
	for(int i=0;i<n;i++){
		for(int j=0;j<m;j++){
			cin>>arr[i][j];
		}
	}
	//테트로미노를 하나만 놓는다. 
	
	for(int i=0;i<n;i++){
		for(int j=0;j<m;j++){
			for(int k=0;k<19;k++){
				bool ok=true;
				int sum=arr[i][j];
				for(int l=0;l<3;l++){
					if(i+tetromino[k][l][0]>=0&&i+tetromino[k][l][0]<n&&j+tetromino[k][l][1]>=0&&j+tetromino[k][l][1]<m)
						sum+=arr[i+tetromino[k][l][0]][j+tetromino[k][l][1]];
					else{
						ok=false;
						break;
					}
				}
				if(ok=true){
					if(sum>max) max=sum;
				}
			}
		}
	}
	cout<<max;

	return 0;
}
